142. Deployment Options
https://www.udemy.com/course/angular-2-and-nodejs-the-practical-guide/learn/lecture/10576386#overview
143. Deploying the REST Api
https://www.udemy.com/course/angular-2-and-nodejs-the-practical-guide/learn/lecture/10576388#overview
Max

==================================================
サーバ(Nodejs)とAngularを別のリモートサーバに設定する
==================================================
BACKEND用の package.json を準備
  sever.jsをBACKENDフォルダにコピーし、
  サーバ(Nodejs)のすべてのファイルをBACKEND配下に統一する。
      const app = require("./app");に変更
      その他、BACKEND/フォルダを利用している個所を修正（画像等）
  package.jsonから、Angular関連を除く

  Angularのpackage.json
    "start:server": "nodemon ./backend/server.js"に変更して
    ローカルでの開発・修正に対応する。

[[ AWS Elastic ]] アプリケーションの新規作成
  アプリケーション名
＊環境の作成
[ Web server environment ]を選択　（Woker environmentではない）
[ Platform ] Node.js を選択
[ Aplication code ] Upload your code を選択
    BACKENDのすべてのファイルを選び、ZIPファイルを作成
＊　IPアドレスを取得しておく *　 MongoDB [Security]IP Whitelist用
    ダッシュボードの  （Events）等から　(created EIP)

Configurarion preset: Low cost (free)のままで、
ソフトウェア（Software）：
    Node.jsの最新バージョンを指定
    Node command: node server.js　（重要）app.js がデフォルトだから。
    環境変数の設定
          [nodemon.json]
          {
            "env": {
              "MONGO_ATLAS_PW": "ty7575aa",
              "JWT_KEY": "secret_this_should_be_longer_auty"
            }
          }

[[ Mongodbの Security > whitelist ]]に、上記のIPアドレスを追加する。

BACKENDのみの場合の確認は、URLに/api等を付ける。
http://nodeangularmax1-env.h7b8dyvcmm.us-east-2.elasticbeanstalk.com/api/


[[ AWS s3 ]]
{{first all}}
Bucket Permissions ===> Make sure that all these boxes are UNCHECKED

  続きは、README.mongodb









HEROKU
    重要 [ ./backend/package.json ]
    "start": "node ./backend/server.js",　===>  "start": "node server.js"

    環境変数の追加 heroku config:set PASS=word
      [nodemon.json]
          {
            "env": {
              "MONGO_ATLAS_PW": "ty7575aa",
              "JWT_KEY": "secret_this_should_be_longer_auty"
            }
          }
          heroku config:set MONGO_ATLAS_PW=ty7575aa
          heroku config:set JWT_KEY=secret_this_should_be_longer_auty
          または、
          HEROKU > Settings > [Config Vars]
          ===========================================================
          （AWS Elastic）は、ダッシュボードで設定
          ===========================================================

    const port = process.env.PORT || 3000;
    // [ config/database.js ]
    // if(process.env.NODE_ENV === 'production') {
    //   module.exports = {
    //     mongoURI:
    //       "mongodb+srv://ty7575au:auty@cluster0-k3unv.gcp.mongodb.net/test?retryWrites=true&w=majority"
    //   };
    // } else {
    //   module.exports = {mongoURI: 'mongodb://localhost/vidjot-dev'}
    // }

    ( .gitignore ) node_modules

cd backend
>git init
>git add .
>git commit -m "initial commit"
(( >git push heroku master ))
 ...
>git commit -m "bug_fix commit"

     *** heroku toolbelt install ***

>heroku login
 Email: ty7575au@yahoo.co.jp auty
 Password:
>heroku create

    [[  iArch  ]]
        >heroku create
           »   Warning: heroku update available from 7.26.2 to 7.35.0.
            Creating app... done, ⬢ still-dusk-91688
            https://still-dusk-91688.herokuapp.com/ | https://git.heroku.com/still-dusk-91688.git
    [[  Domain Name  ]] namecheap ... Advanced DNS


        HEROKU > Settings > [Add domain]
            archmapp.tech www.archmapp.techを入力し、
            DNS Value（archmapp.tech.herokudns.com）をコピーして、
            namecheapの[CNAME Record]のValueに張り付け


>>> heroku ダッシュボード
コピー
        -a, --app=app        the Heroku app to use
>heroku git:remote -a ...ペースト
>heroku git:remote -a still-dusk-91688

    [[  iArch  ]]
        heroku git:remote -a still-dusk-91688
        »   Warning: heroku update available from 7.26.2 to 7.35.0.
            set git remote heroku to https://git.heroku.com/still-dusk-91688.git



>git push heroku master
Counting objects: 28, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (27/27), done.
Writing objects: 100% (28/28), 983.53 KiB | 268.00 KiB/s, done.
Total 28 (delta 0), reused 0 (delta 0)
remote: Compressing source files... done.
remote: Building source:
remote:
remote: -----> Node.js app detected
remote:
remote: -----> Creating runtime environment
remote:
remote:        NPM_CONFIG_LOGLEVEL=error
remote:        NODE_ENV=production
remote:        NODE_MODULES_CACHE=true
remote:        NODE_VERBOSE=false
remote:
remote: -----> Installing binaries
remote:        engines.node (package.json):  unspecified
remote:        engines.npm (package.json):   unspecified (use default)
remote:
remote:        Resolving node version 12.x...
remote:        Downloading and installing node 12.13.0...
remote:        Using default npm version: 6.12.0
remote:
remote: -----> Installing dependencies
remote:        Installing node modules (package.json)
remote:        added 89 packages from 67 contributors and audited 208 packages in 3.845s
remote:        found 0 vulnerabilities
remote:
remote:
remote: -----> Build
remote:
remote: -----> Pruning devDependencies
remote:        audited 208 packages in 1.009s
remote:        found 0 vulnerabilities
remote:
remote:
remote: -----> Caching build
remote:        - node_modules
remote:
remote: -----> Build succeeded!
remote: -----> Discovering process types
remote:        Procfile declares types     -> (none)
remote:        Default types for buildpack -> web
remote:
remote: -----> Compressing...
remote:        Done: 25.8M
remote: -----> Launching...
remote:        Released v3
remote:        https://still-dusk-91688.herokuapp.com/ deployed to Heroku
remote:
remote: Verifying deploy... done.
To https://git.heroku.com/still-dusk-91688.git
 * [new branch]      master -> master


>>>>> heroku logs --tail


>>> heroku ダッシュボード
  ((( open app )))

 > heroku open


~~~~~~~~~~~~~~~~~~~~~~~
mongo Shell
mongo "mongodb+srv://cluster0-k3unv.gcp.mongodb.net/test" --username ty7575au

my Application
mongodb+srv://ty7575au:auty@cluster0-k3unv.gcp.mongodb.net/test?retryWrites=true&w=majority

mongoDB Compass
mongodb+srv://ty7575au:auty@cluster0-k3unv.gcp.mongodb.net/test


~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~
mongodb+srv://auty:<password>@cluster0-8mh34.mongodb.net/test?retryWrites=true&w=majority




==========================

heroku local web
heroku local

npm install cool-ascii-faces
[modify index.js]
npm install
heroku local
git add .
git commit -m "Add cool face API"
git push heroku master

heroku open cool

